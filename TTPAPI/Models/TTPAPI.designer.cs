#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TTPAPI.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbea4f06f0fe9440d584bca3b501473fc6")]
	public partial class TTPAPIDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccessAppKey(AccessAppKey instance);
    partial void UpdateAccessAppKey(AccessAppKey instance);
    partial void DeleteAccessAppKey(AccessAppKey instance);
    partial void InsertAccessTokenCache(AccessTokenCache instance);
    partial void UpdateAccessTokenCache(AccessTokenCache instance);
    partial void DeleteAccessTokenCache(AccessTokenCache instance);
    partial void InsertAccountManagemet(AccountManagemet instance);
    partial void UpdateAccountManagemet(AccountManagemet instance);
    partial void DeleteAccountManagemet(AccountManagemet instance);
    partial void InsertDeviceCurrentLocation(DeviceCurrentLocation instance);
    partial void UpdateDeviceCurrentLocation(DeviceCurrentLocation instance);
    partial void DeleteDeviceCurrentLocation(DeviceCurrentLocation instance);
    partial void InsertDeviceLocationHistory(DeviceLocationHistory instance);
    partial void UpdateDeviceLocationHistory(DeviceLocationHistory instance);
    partial void DeleteDeviceLocationHistory(DeviceLocationHistory instance);
    partial void InsertDeviceMaster(DeviceMaster instance);
    partial void UpdateDeviceMaster(DeviceMaster instance);
    partial void DeleteDeviceMaster(DeviceMaster instance);
    partial void InsertInStudentTrack(InStudentTrack instance);
    partial void UpdateInStudentTrack(InStudentTrack instance);
    partial void DeleteInStudentTrack(InStudentTrack instance);
    partial void InsertDeviceTypeMaster(DeviceTypeMaster instance);
    partial void UpdateDeviceTypeMaster(DeviceTypeMaster instance);
    partial void DeleteDeviceTypeMaster(DeviceTypeMaster instance);
    partial void InsertMapMaster(MapMaster instance);
    partial void UpdateMapMaster(MapMaster instance);
    partial void DeleteMapMaster(MapMaster instance);
    partial void InsertRoleMaster(RoleMaster instance);
    partial void UpdateRoleMaster(RoleMaster instance);
    partial void DeleteRoleMaster(RoleMaster instance);
    partial void InsertRouteConfigMaster(RouteConfigMaster instance);
    partial void UpdateRouteConfigMaster(RouteConfigMaster instance);
    partial void DeleteRouteConfigMaster(RouteConfigMaster instance);
    partial void InsertRouteDetail(RouteDetail instance);
    partial void UpdateRouteDetail(RouteDetail instance);
    partial void DeleteRouteDetail(RouteDetail instance);
    partial void InsertStudentMaster(StudentMaster instance);
    partial void UpdateStudentMaster(StudentMaster instance);
    partial void DeleteStudentMaster(StudentMaster instance);
    partial void InsertStudentVehicleMapDetail(StudentVehicleMapDetail instance);
    partial void UpdateStudentVehicleMapDetail(StudentVehicleMapDetail instance);
    partial void DeleteStudentVehicleMapDetail(StudentVehicleMapDetail instance);
    partial void InsertUserContactDet(UserContactDet instance);
    partial void UpdateUserContactDet(UserContactDet instance);
    partial void DeleteUserContactDet(UserContactDet instance);
    partial void InsertUserDeviceMapDet(UserDeviceMapDet instance);
    partial void UpdateUserDeviceMapDet(UserDeviceMapDet instance);
    partial void DeleteUserDeviceMapDet(UserDeviceMapDet instance);
    partial void InsertUserLoginDet(UserLoginDet instance);
    partial void UpdateUserLoginDet(UserLoginDet instance);
    partial void DeleteUserLoginDet(UserLoginDet instance);
    partial void InsertUserManagement(UserManagement instance);
    partial void UpdateUserManagement(UserManagement instance);
    partial void DeleteUserManagement(UserManagement instance);
    partial void InsertUserMapDet(UserMapDet instance);
    partial void UpdateUserMapDet(UserMapDet instance);
    partial void DeleteUserMapDet(UserMapDet instance);
    partial void InsertVehicleMaster(VehicleMaster instance);
    partial void UpdateVehicleMaster(VehicleMaster instance);
    partial void DeleteVehicleMaster(VehicleMaster instance);
    partial void InsertvehicleRouteMapDet(vehicleRouteMapDet instance);
    partial void UpdatevehicleRouteMapDet(vehicleRouteMapDet instance);
    partial void DeletevehicleRouteMapDet(vehicleRouteMapDet instance);
    partial void InsertVehicleDeviceMapDet(VehicleDeviceMapDet instance);
    partial void UpdateVehicleDeviceMapDet(VehicleDeviceMapDet instance);
    partial void DeleteVehicleDeviceMapDet(VehicleDeviceMapDet instance);
    partial void InsertUservehicleMapDet(UservehicleMapDet instance);
    partial void UpdateUservehicleMapDet(UservehicleMapDet instance);
    partial void DeleteUservehicleMapDet(UservehicleMapDet instance);
    #endregion
		
		public TTPAPIDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TTPAPIConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TTPAPIDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TTPAPIDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TTPAPIDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TTPAPIDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AccessAppKey> AccessAppKeys
		{
			get
			{
				return this.GetTable<AccessAppKey>();
			}
		}
		
		public System.Data.Linq.Table<AccessTokenCache> AccessTokenCaches
		{
			get
			{
				return this.GetTable<AccessTokenCache>();
			}
		}
		
		public System.Data.Linq.Table<AccountManagemet> AccountManagemets
		{
			get
			{
				return this.GetTable<AccountManagemet>();
			}
		}
		
		public System.Data.Linq.Table<DeviceCurrentLocation> DeviceCurrentLocations
		{
			get
			{
				return this.GetTable<DeviceCurrentLocation>();
			}
		}
		
		public System.Data.Linq.Table<DeviceLocationHistory> DeviceLocationHistories
		{
			get
			{
				return this.GetTable<DeviceLocationHistory>();
			}
		}
		
		public System.Data.Linq.Table<DeviceMaster> DeviceMasters
		{
			get
			{
				return this.GetTable<DeviceMaster>();
			}
		}
		
		public System.Data.Linq.Table<InStudentTrack> InStudentTracks
		{
			get
			{
				return this.GetTable<InStudentTrack>();
			}
		}
		
		public System.Data.Linq.Table<DeviceTypeMaster> DeviceTypeMasters
		{
			get
			{
				return this.GetTable<DeviceTypeMaster>();
			}
		}
		
		public System.Data.Linq.Table<MapMaster> MapMasters
		{
			get
			{
				return this.GetTable<MapMaster>();
			}
		}
		
		public System.Data.Linq.Table<OutStudentTrack> OutStudentTracks
		{
			get
			{
				return this.GetTable<OutStudentTrack>();
			}
		}
		
		public System.Data.Linq.Table<RoleMaster> RoleMasters
		{
			get
			{
				return this.GetTable<RoleMaster>();
			}
		}
		
		public System.Data.Linq.Table<RouteConfigMaster> RouteConfigMasters
		{
			get
			{
				return this.GetTable<RouteConfigMaster>();
			}
		}
		
		public System.Data.Linq.Table<RouteDetail> RouteDetails
		{
			get
			{
				return this.GetTable<RouteDetail>();
			}
		}
		
		public System.Data.Linq.Table<StudentMaster> StudentMasters
		{
			get
			{
				return this.GetTable<StudentMaster>();
			}
		}
		
		public System.Data.Linq.Table<StudentVehicleMapDetail> StudentVehicleMapDetails
		{
			get
			{
				return this.GetTable<StudentVehicleMapDetail>();
			}
		}
		
		public System.Data.Linq.Table<UserContactDet> UserContactDets
		{
			get
			{
				return this.GetTable<UserContactDet>();
			}
		}
		
		public System.Data.Linq.Table<UserDeviceMapDet> UserDeviceMapDets
		{
			get
			{
				return this.GetTable<UserDeviceMapDet>();
			}
		}
		
		public System.Data.Linq.Table<UserLoginDet> UserLoginDets
		{
			get
			{
				return this.GetTable<UserLoginDet>();
			}
		}
		
		public System.Data.Linq.Table<UserManagement> UserManagements
		{
			get
			{
				return this.GetTable<UserManagement>();
			}
		}
		
		public System.Data.Linq.Table<UserMapDet> UserMapDets
		{
			get
			{
				return this.GetTable<UserMapDet>();
			}
		}
		
		public System.Data.Linq.Table<VehicleMaster> VehicleMasters
		{
			get
			{
				return this.GetTable<VehicleMaster>();
			}
		}
		
		public System.Data.Linq.Table<vehicleRouteMapDet> vehicleRouteMapDets
		{
			get
			{
				return this.GetTable<vehicleRouteMapDet>();
			}
		}
		
		public System.Data.Linq.Table<VehicleDeviceMapDet> VehicleDeviceMapDets
		{
			get
			{
				return this.GetTable<VehicleDeviceMapDet>();
			}
		}
		
		public System.Data.Linq.Table<UservehicleMapDet> UservehicleMapDets
		{
			get
			{
				return this.GetTable<UservehicleMapDet>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccessAppKey")]
	public partial class AccessAppKey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.Guid> _AppKey;
		
		private System.Nullable<int> _AccountId;
		
		private string _description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAppKeyChanging(System.Nullable<System.Guid> value);
    partial void OnAppKeyChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public AccessAppKey()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AppKey
		{
			get
			{
				return this._AppKey;
			}
			set
			{
				if ((this._AppKey != value))
				{
					this.OnAppKeyChanging(value);
					this.SendPropertyChanging();
					this._AppKey = value;
					this.SendPropertyChanged("AppKey");
					this.OnAppKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccessTokenCache")]
	public partial class AccessTokenCache : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int @__Id;
		
		private string _UserId;
		
		private string _Token;
		
		private System.DateTime _LastAccessDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_IdChanging(int value);
    partial void On_IdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnLastAccessDateTimeChanging(System.DateTime value);
    partial void OnLastAccessDateTimeChanged();
    #endregion
		
		public AccessTokenCache()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Id]", Storage="__Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int _Id
		{
			get
			{
				return this.@__Id;
			}
			set
			{
				if ((this.@__Id != value))
				{
					this.On_IdChanging(value);
					this.SendPropertyChanging();
					this.@__Id = value;
					this.SendPropertyChanged("_Id");
					this.On_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAccessDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastAccessDateTime
		{
			get
			{
				return this._LastAccessDateTime;
			}
			set
			{
				if ((this._LastAccessDateTime != value))
				{
					this.OnLastAccessDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastAccessDateTime = value;
					this.SendPropertyChanged("LastAccessDateTime");
					this.OnLastAccessDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountManagemet")]
	public partial class AccountManagemet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long @__id;
		
		private string _AccountID;
		
		private string _AccountName;
		
		private string _AccountDesc;
		
		private string _UpdatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private System.Guid _AppKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnAccountDescChanging(string value);
    partial void OnAccountDescChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    partial void OnAppKeyChanging(System.Guid value);
    partial void OnAppKeyChanged();
    #endregion
		
		public AccountManagemet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_id]", Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountDesc
		{
			get
			{
				return this._AccountDesc;
			}
			set
			{
				if ((this._AccountDesc != value))
				{
					this.OnAccountDescChanging(value);
					this.SendPropertyChanging();
					this._AccountDesc = value;
					this.SendPropertyChanged("AccountDesc");
					this.OnAccountDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppKey", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AppKey
		{
			get
			{
				return this._AppKey;
			}
			set
			{
				if ((this._AppKey != value))
				{
					this.OnAppKeyChanging(value);
					this.SendPropertyChanging();
					this._AppKey = value;
					this.SendPropertyChanged("AppKey");
					this.OnAppKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeviceCurrentLocation")]
	public partial class DeviceCurrentLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long @__id;
		
		private long _DeviceId;
		
		private string _CurrentLat;
		
		private string _CurrentLong;
		
		private System.DateTime _UdatedDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnDeviceIdChanging(long value);
    partial void OnDeviceIdChanged();
    partial void OnCurrentLatChanging(string value);
    partial void OnCurrentLatChanged();
    partial void OnCurrentLongChanging(string value);
    partial void OnCurrentLongChanged();
    partial void OnUdatedDateTimeChanging(System.DateTime value);
    partial void OnUdatedDateTimeChanged();
    #endregion
		
		public DeviceCurrentLocation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_id]", Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="BigInt NOT NULL")]
		public long DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentLat", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrentLat
		{
			get
			{
				return this._CurrentLat;
			}
			set
			{
				if ((this._CurrentLat != value))
				{
					this.OnCurrentLatChanging(value);
					this.SendPropertyChanging();
					this._CurrentLat = value;
					this.SendPropertyChanged("CurrentLat");
					this.OnCurrentLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentLong", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrentLong
		{
			get
			{
				return this._CurrentLong;
			}
			set
			{
				if ((this._CurrentLong != value))
				{
					this.OnCurrentLongChanging(value);
					this.SendPropertyChanging();
					this._CurrentLong = value;
					this.SendPropertyChanged("CurrentLong");
					this.OnCurrentLongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UdatedDateTime
		{
			get
			{
				return this._UdatedDateTime;
			}
			set
			{
				if ((this._UdatedDateTime != value))
				{
					this.OnUdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UdatedDateTime = value;
					this.SendPropertyChanged("UdatedDateTime");
					this.OnUdatedDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeviceLocationHistory")]
	public partial class DeviceLocationHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long @__id;
		
		private long _DeviceId;
		
		private string _Lat;
		
		private string _Long;
		
		private string _Typeofnetwork;
		
		private System.DateTime _DateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnDeviceIdChanging(long value);
    partial void OnDeviceIdChanged();
    partial void OnLatChanging(string value);
    partial void OnLatChanged();
    partial void OnLongChanging(string value);
    partial void OnLongChanged();
    partial void OnTypeofnetworkChanging(string value);
    partial void OnTypeofnetworkChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    #endregion
		
		public DeviceLocationHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_id]", Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="BigInt NOT NULL")]
		public long DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lat", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Lat
		{
			get
			{
				return this._Lat;
			}
			set
			{
				if ((this._Lat != value))
				{
					this.OnLatChanging(value);
					this.SendPropertyChanging();
					this._Lat = value;
					this.SendPropertyChanged("Lat");
					this.OnLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Long", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Long
		{
			get
			{
				return this._Long;
			}
			set
			{
				if ((this._Long != value))
				{
					this.OnLongChanging(value);
					this.SendPropertyChanging();
					this._Long = value;
					this.SendPropertyChanged("Long");
					this.OnLongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Typeofnetwork", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Typeofnetwork
		{
			get
			{
				return this._Typeofnetwork;
			}
			set
			{
				if ((this._Typeofnetwork != value))
				{
					this.OnTypeofnetworkChanging(value);
					this.SendPropertyChanging();
					this._Typeofnetwork = value;
					this.SendPropertyChanged("Typeofnetwork");
					this.OnTypeofnetworkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeviceMaster")]
	public partial class DeviceMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long @__id;
		
		private long _DeviceId;
		
		private string _DeviceUniqueId;
		
		private long _DeviceTypeId;
		
		private string _DeviceModel;
		
		private string _AccountID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnDeviceIdChanging(long value);
    partial void OnDeviceIdChanged();
    partial void OnDeviceUniqueIdChanging(string value);
    partial void OnDeviceUniqueIdChanged();
    partial void OnDeviceTypeIdChanging(long value);
    partial void OnDeviceTypeIdChanged();
    partial void OnDeviceModelChanging(string value);
    partial void OnDeviceModelChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    #endregion
		
		public DeviceMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_id]", Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="BigInt NOT NULL")]
		public long DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceUniqueId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeviceUniqueId
		{
			get
			{
				return this._DeviceUniqueId;
			}
			set
			{
				if ((this._DeviceUniqueId != value))
				{
					this.OnDeviceUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceUniqueId = value;
					this.SendPropertyChanged("DeviceUniqueId");
					this.OnDeviceUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceTypeId", DbType="BigInt NOT NULL")]
		public long DeviceTypeId
		{
			get
			{
				return this._DeviceTypeId;
			}
			set
			{
				if ((this._DeviceTypeId != value))
				{
					this.OnDeviceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceTypeId = value;
					this.SendPropertyChanged("DeviceTypeId");
					this.OnDeviceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceModel", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeviceModel
		{
			get
			{
				return this._DeviceModel;
			}
			set
			{
				if ((this._DeviceModel != value))
				{
					this.OnDeviceModelChanging(value);
					this.SendPropertyChanging();
					this._DeviceModel = value;
					this.SendPropertyChanged("DeviceModel");
					this.OnDeviceModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="NVarChar(50)")]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InStudentTrack")]
	public partial class InStudentTrack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int @__Id;
		
		private string _StudentId;
		
		private System.Nullable<System.DateTime> _InDateTime;
		
		private string _InLat;
		
		private string _InLong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_IdChanging(int value);
    partial void On_IdChanged();
    partial void OnStudentIdChanging(string value);
    partial void OnStudentIdChanged();
    partial void OnInDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInDateTimeChanged();
    partial void OnInLatChanging(string value);
    partial void OnInLatChanged();
    partial void OnInLongChanging(string value);
    partial void OnInLongChanged();
    #endregion
		
		public InStudentTrack()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Id]", Storage="__Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int _Id
		{
			get
			{
				return this.@__Id;
			}
			set
			{
				if ((this.@__Id != value))
				{
					this.On_IdChanging(value);
					this.SendPropertyChanging();
					this.@__Id = value;
					this.SendPropertyChanged("_Id");
					this.On_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="NVarChar(50)")]
		public string StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> InDateTime
		{
			get
			{
				return this._InDateTime;
			}
			set
			{
				if ((this._InDateTime != value))
				{
					this.OnInDateTimeChanging(value);
					this.SendPropertyChanging();
					this._InDateTime = value;
					this.SendPropertyChanged("InDateTime");
					this.OnInDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InLat", DbType="NVarChar(50)")]
		public string InLat
		{
			get
			{
				return this._InLat;
			}
			set
			{
				if ((this._InLat != value))
				{
					this.OnInLatChanging(value);
					this.SendPropertyChanging();
					this._InLat = value;
					this.SendPropertyChanged("InLat");
					this.OnInLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InLong", DbType="NVarChar(50)")]
		public string InLong
		{
			get
			{
				return this._InLong;
			}
			set
			{
				if ((this._InLong != value))
				{
					this.OnInLongChanging(value);
					this.SendPropertyChanging();
					this._InLong = value;
					this.SendPropertyChanged("InLong");
					this.OnInLongChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeviceTypeMaster")]
	public partial class DeviceTypeMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _DeviceTypeId;
		
		private string _DeviceTypeDesc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeviceTypeIdChanging(long value);
    partial void OnDeviceTypeIdChanged();
    partial void OnDeviceTypeDescChanging(string value);
    partial void OnDeviceTypeDescChanged();
    #endregion
		
		public DeviceTypeMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceTypeId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long DeviceTypeId
		{
			get
			{
				return this._DeviceTypeId;
			}
			set
			{
				if ((this._DeviceTypeId != value))
				{
					this.OnDeviceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceTypeId = value;
					this.SendPropertyChanged("DeviceTypeId");
					this.OnDeviceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceTypeDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeviceTypeDesc
		{
			get
			{
				return this._DeviceTypeDesc;
			}
			set
			{
				if ((this._DeviceTypeDesc != value))
				{
					this.OnDeviceTypeDescChanging(value);
					this.SendPropertyChanging();
					this._DeviceTypeDesc = value;
					this.SendPropertyChanged("DeviceTypeDesc");
					this.OnDeviceTypeDescChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapMaster")]
	public partial class MapMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MapId;
		
		private string _MapName;
		
		private string _MapDesc;
		
		private System.DateTime _CreatedDateTime;
		
		private string _CreatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMapIdChanging(long value);
    partial void OnMapIdChanged();
    partial void OnMapNameChanging(string value);
    partial void OnMapNameChanged();
    partial void OnMapDescChanging(string value);
    partial void OnMapDescChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    #endregion
		
		public MapMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MapId
		{
			get
			{
				return this._MapId;
			}
			set
			{
				if ((this._MapId != value))
				{
					this.OnMapIdChanging(value);
					this.SendPropertyChanging();
					this._MapId = value;
					this.SendPropertyChanged("MapId");
					this.OnMapIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MapName
		{
			get
			{
				return this._MapName;
			}
			set
			{
				if ((this._MapName != value))
				{
					this.OnMapNameChanging(value);
					this.SendPropertyChanging();
					this._MapName = value;
					this.SendPropertyChanged("MapName");
					this.OnMapNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MapDesc
		{
			get
			{
				return this._MapDesc;
			}
			set
			{
				if ((this._MapDesc != value))
				{
					this.OnMapDescChanging(value);
					this.SendPropertyChanging();
					this._MapDesc = value;
					this.SendPropertyChanged("MapDesc");
					this.OnMapDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OutStudentTrack")]
	public partial class OutStudentTrack
	{
		
		private int @__ID;
		
		private string _StudentId;
		
		private System.Nullable<System.DateTime> _OutDateTime;
		
		private string _OutLat;
		
		private string _OutLong;
		
		public OutStudentTrack()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_ID]", Storage="__ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int _ID
		{
			get
			{
				return this.@__ID;
			}
			set
			{
				if ((this.@__ID != value))
				{
					this.@__ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="NVarChar(50)")]
		public string StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this._StudentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OutDateTime
		{
			get
			{
				return this._OutDateTime;
			}
			set
			{
				if ((this._OutDateTime != value))
				{
					this._OutDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutLat", DbType="NVarChar(50)")]
		public string OutLat
		{
			get
			{
				return this._OutLat;
			}
			set
			{
				if ((this._OutLat != value))
				{
					this._OutLat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutLong", DbType="NVarChar(50)")]
		public string OutLong
		{
			get
			{
				return this._OutLong;
			}
			set
			{
				if ((this._OutLong != value))
				{
					this._OutLong = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleMaster")]
	public partial class RoleMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RoleId;
		
		private string _RoleName;
		
		private string _RoleDesc;
		
		private System.DateTime _CreatedDateTime;
		
		private string _CreatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(long value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnRoleDescChanging(string value);
    partial void OnRoleDescChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    #endregion
		
		public RoleMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleDesc
		{
			get
			{
				return this._RoleDesc;
			}
			set
			{
				if ((this._RoleDesc != value))
				{
					this.OnRoleDescChanging(value);
					this.SendPropertyChanging();
					this._RoleDesc = value;
					this.SendPropertyChanged("RoleDesc");
					this.OnRoleDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RouteConfigMaster")]
	public partial class RouteConfigMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RouteId;
		
		private string _RouteName;
		
		private string _RouteDesc;
		
		private string _AccountId;
		
		private string _CreatedBy;
		
		private System.DateTime _CreatedDateTime;
		
		private System.Nullable<bool> _IsDetele;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRouteIdChanging(long value);
    partial void OnRouteIdChanged();
    partial void OnRouteNameChanging(string value);
    partial void OnRouteNameChanged();
    partial void OnRouteDescChanging(string value);
    partial void OnRouteDescChanged();
    partial void OnAccountIdChanging(string value);
    partial void OnAccountIdChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnIsDeteleChanging(System.Nullable<bool> value);
    partial void OnIsDeteleChanged();
    #endregion
		
		public RouteConfigMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long RouteId
		{
			get
			{
				return this._RouteId;
			}
			set
			{
				if ((this._RouteId != value))
				{
					this.OnRouteIdChanging(value);
					this.SendPropertyChanging();
					this._RouteId = value;
					this.SendPropertyChanged("RouteId");
					this.OnRouteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RouteName
		{
			get
			{
				return this._RouteName;
			}
			set
			{
				if ((this._RouteName != value))
				{
					this.OnRouteNameChanging(value);
					this.SendPropertyChanging();
					this._RouteName = value;
					this.SendPropertyChanged("RouteName");
					this.OnRouteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RouteDesc
		{
			get
			{
				return this._RouteDesc;
			}
			set
			{
				if ((this._RouteDesc != value))
				{
					this.OnRouteDescChanging(value);
					this.SendPropertyChanging();
					this._RouteDesc = value;
					this.SendPropertyChanged("RouteDesc");
					this.OnRouteDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDetele", DbType="Bit")]
		public System.Nullable<bool> IsDetele
		{
			get
			{
				return this._IsDetele;
			}
			set
			{
				if ((this._IsDetele != value))
				{
					this.OnIsDeteleChanging(value);
					this.SendPropertyChanging();
					this._IsDetele = value;
					this.SendPropertyChanged("IsDetele");
					this.OnIsDeteleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RouteDetails")]
	public partial class RouteDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long @__id;
		
		private long _RouteId;
		
		private int _SeqNo;
		
		private string _Lat;
		
		private string _Long;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnRouteIdChanging(long value);
    partial void OnRouteIdChanged();
    partial void OnSeqNoChanging(int value);
    partial void OnSeqNoChanged();
    partial void OnLatChanging(string value);
    partial void OnLatChanged();
    partial void OnLongChanging(string value);
    partial void OnLongChanged();
    #endregion
		
		public RouteDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_id]", Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteId", DbType="BigInt NOT NULL")]
		public long RouteId
		{
			get
			{
				return this._RouteId;
			}
			set
			{
				if ((this._RouteId != value))
				{
					this.OnRouteIdChanging(value);
					this.SendPropertyChanging();
					this._RouteId = value;
					this.SendPropertyChanged("RouteId");
					this.OnRouteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="Int NOT NULL")]
		public int SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lat", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Lat
		{
			get
			{
				return this._Lat;
			}
			set
			{
				if ((this._Lat != value))
				{
					this.OnLatChanging(value);
					this.SendPropertyChanging();
					this._Lat = value;
					this.SendPropertyChanged("Lat");
					this.OnLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Long", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Long
		{
			get
			{
				return this._Long;
			}
			set
			{
				if ((this._Long != value))
				{
					this.OnLongChanging(value);
					this.SendPropertyChanging();
					this._Long = value;
					this.SendPropertyChanged("Long");
					this.OnLongChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentMaster")]
	public partial class StudentMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int @__Id;
		
		private string _StudentID;
		
		private string _QRCodeFileName;
		
		private string _QRCodeFilePath;
		
		private string _Name;
		
		private System.Nullable<short> _Class;
		
		private string _Division;
		
		private string _RollNumber;
		
		private string _AccountID;
		
		private System.Nullable<bool> _IsDelete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_IdChanging(int value);
    partial void On_IdChanged();
    partial void OnStudentIDChanging(string value);
    partial void OnStudentIDChanged();
    partial void OnQRCodeFileNameChanging(string value);
    partial void OnQRCodeFileNameChanged();
    partial void OnQRCodeFilePathChanging(string value);
    partial void OnQRCodeFilePathChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnClassChanging(System.Nullable<short> value);
    partial void OnClassChanged();
    partial void OnDivisionChanging(string value);
    partial void OnDivisionChanged();
    partial void OnRollNumberChanging(string value);
    partial void OnRollNumberChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public StudentMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Id]", Storage="__Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int _Id
		{
			get
			{
				return this.@__Id;
			}
			set
			{
				if ((this.@__Id != value))
				{
					this.On_IdChanging(value);
					this.SendPropertyChanging();
					this.@__Id = value;
					this.SendPropertyChanged("_Id");
					this.On_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="NVarChar(50)")]
		public string StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeFileName", DbType="NVarChar(50)")]
		public string QRCodeFileName
		{
			get
			{
				return this._QRCodeFileName;
			}
			set
			{
				if ((this._QRCodeFileName != value))
				{
					this.OnQRCodeFileNameChanging(value);
					this.SendPropertyChanging();
					this._QRCodeFileName = value;
					this.SendPropertyChanged("QRCodeFileName");
					this.OnQRCodeFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeFilePath", DbType="NVarChar(50)")]
		public string QRCodeFilePath
		{
			get
			{
				return this._QRCodeFilePath;
			}
			set
			{
				if ((this._QRCodeFilePath != value))
				{
					this.OnQRCodeFilePathChanging(value);
					this.SendPropertyChanging();
					this._QRCodeFilePath = value;
					this.SendPropertyChanged("QRCodeFilePath");
					this.OnQRCodeFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="SmallInt")]
		public System.Nullable<short> Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division", DbType="NVarChar(50)")]
		public string Division
		{
			get
			{
				return this._Division;
			}
			set
			{
				if ((this._Division != value))
				{
					this.OnDivisionChanging(value);
					this.SendPropertyChanging();
					this._Division = value;
					this.SendPropertyChanged("Division");
					this.OnDivisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RollNumber", DbType="NVarChar(50)")]
		public string RollNumber
		{
			get
			{
				return this._RollNumber;
			}
			set
			{
				if ((this._RollNumber != value))
				{
					this.OnRollNumberChanging(value);
					this.SendPropertyChanging();
					this._RollNumber = value;
					this.SendPropertyChanged("RollNumber");
					this.OnRollNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="NVarChar(50)")]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
		public System.Nullable<bool> IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentVehicleMapDetails")]
	public partial class StudentVehicleMapDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int @__Id;
		
		private string _StudentID;
		
		private string _VehicleId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_IdChanging(int value);
    partial void On_IdChanged();
    partial void OnStudentIDChanging(string value);
    partial void OnStudentIDChanged();
    partial void OnVehicleIdChanging(string value);
    partial void OnVehicleIdChanged();
    #endregion
		
		public StudentVehicleMapDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Id]", Storage="__Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int _Id
		{
			get
			{
				return this.@__Id;
			}
			set
			{
				if ((this.@__Id != value))
				{
					this.On_IdChanging(value);
					this.SendPropertyChanging();
					this.@__Id = value;
					this.SendPropertyChanged("_Id");
					this.On_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="NVarChar(50)")]
		public string StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleId", DbType="NVarChar(50)")]
		public string VehicleId
		{
			get
			{
				return this._VehicleId;
			}
			set
			{
				if ((this._VehicleId != value))
				{
					this.OnVehicleIdChanging(value);
					this.SendPropertyChanging();
					this._VehicleId = value;
					this.SendPropertyChanged("VehicleId");
					this.OnVehicleIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserContactDet")]
	public partial class UserContactDet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long @__id;
		
		private string _UserId;
		
		private string _PhoneNumber;
		
		private string _EmailAddress;
		
		private string _PostalAddress;
		
		private string _PreferredAlert;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPostalAddressChanging(string value);
    partial void OnPostalAddressChanged();
    partial void OnPreferredAlertChanging(string value);
    partial void OnPreferredAlertChanged();
    #endregion
		
		public UserContactDet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_id]", Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NChar(10)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(50)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalAddress", DbType="NVarChar(MAX)")]
		public string PostalAddress
		{
			get
			{
				return this._PostalAddress;
			}
			set
			{
				if ((this._PostalAddress != value))
				{
					this.OnPostalAddressChanging(value);
					this.SendPropertyChanging();
					this._PostalAddress = value;
					this.SendPropertyChanged("PostalAddress");
					this.OnPostalAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferredAlert", DbType="NVarChar(50)")]
		public string PreferredAlert
		{
			get
			{
				return this._PreferredAlert;
			}
			set
			{
				if ((this._PreferredAlert != value))
				{
					this.OnPreferredAlertChanging(value);
					this.SendPropertyChanging();
					this._PreferredAlert = value;
					this.SendPropertyChanged("PreferredAlert");
					this.OnPreferredAlertChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserDeviceMapDet")]
	public partial class UserDeviceMapDet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long @__id;
		
		private string _UserId;
		
		private long _DeviceId;
		
		private System.DateTime _MappedDateTime;
		
		private string _MappedBy;
		
		private bool _isActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnDeviceIdChanging(long value);
    partial void OnDeviceIdChanged();
    partial void OnMappedDateTimeChanging(System.DateTime value);
    partial void OnMappedDateTimeChanged();
    partial void OnMappedByChanging(string value);
    partial void OnMappedByChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    #endregion
		
		public UserDeviceMapDet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_id]", Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="BigInt NOT NULL")]
		public long DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MappedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime MappedDateTime
		{
			get
			{
				return this._MappedDateTime;
			}
			set
			{
				if ((this._MappedDateTime != value))
				{
					this.OnMappedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._MappedDateTime = value;
					this.SendPropertyChanged("MappedDateTime");
					this.OnMappedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MappedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MappedBy
		{
			get
			{
				return this._MappedBy;
			}
			set
			{
				if ((this._MappedBy != value))
				{
					this.OnMappedByChanging(value);
					this.SendPropertyChanging();
					this._MappedBy = value;
					this.SendPropertyChanged("MappedBy");
					this.OnMappedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLoginDet")]
	public partial class UserLoginDet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _LastLoginDateTime;
		
		private System.DateTime _UpdatedDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnLastLoginDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateTimeChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public UserLoginDet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDateTime
		{
			get
			{
				return this._LastLoginDateTime;
			}
			set
			{
				if ((this._LastLoginDateTime != value))
				{
					this.OnLastLoginDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDateTime = value;
					this.SendPropertyChanged("LastLoginDateTime");
					this.OnLastLoginDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserManagement")]
	public partial class UserManagement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long @__id;
		
		private string _UserId;
		
		private string _UserName;
		
		private long _RoleId;
		
		private string _AccountID;
		
		private System.DateTime _CreatedDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnRoleIdChanging(long value);
    partial void OnRoleIdChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    #endregion
		
		public UserManagement()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_id]", Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="BigInt NOT NULL")]
		public long RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMapDet")]
	public partial class UserMapDet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long @__id;
		
		private string _PrimaryUserId;
		
		private string _SecondaryUserId;
		
		private long _MapId;
		
		private System.DateTime _MappedDateTime;
		
		private string _MappedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnPrimaryUserIdChanging(string value);
    partial void OnPrimaryUserIdChanged();
    partial void OnSecondaryUserIdChanging(string value);
    partial void OnSecondaryUserIdChanged();
    partial void OnMapIdChanging(long value);
    partial void OnMapIdChanged();
    partial void OnMappedDateTimeChanging(System.DateTime value);
    partial void OnMappedDateTimeChanged();
    partial void OnMappedByChanging(string value);
    partial void OnMappedByChanged();
    #endregion
		
		public UserMapDet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_id]", Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryUserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PrimaryUserId
		{
			get
			{
				return this._PrimaryUserId;
			}
			set
			{
				if ((this._PrimaryUserId != value))
				{
					this.OnPrimaryUserIdChanging(value);
					this.SendPropertyChanging();
					this._PrimaryUserId = value;
					this.SendPropertyChanged("PrimaryUserId");
					this.OnPrimaryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryUserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SecondaryUserId
		{
			get
			{
				return this._SecondaryUserId;
			}
			set
			{
				if ((this._SecondaryUserId != value))
				{
					this.OnSecondaryUserIdChanging(value);
					this.SendPropertyChanging();
					this._SecondaryUserId = value;
					this.SendPropertyChanged("SecondaryUserId");
					this.OnSecondaryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapId", DbType="BigInt NOT NULL")]
		public long MapId
		{
			get
			{
				return this._MapId;
			}
			set
			{
				if ((this._MapId != value))
				{
					this.OnMapIdChanging(value);
					this.SendPropertyChanging();
					this._MapId = value;
					this.SendPropertyChanged("MapId");
					this.OnMapIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MappedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime MappedDateTime
		{
			get
			{
				return this._MappedDateTime;
			}
			set
			{
				if ((this._MappedDateTime != value))
				{
					this.OnMappedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._MappedDateTime = value;
					this.SendPropertyChanged("MappedDateTime");
					this.OnMappedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MappedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MappedBy
		{
			get
			{
				return this._MappedBy;
			}
			set
			{
				if ((this._MappedBy != value))
				{
					this.OnMappedByChanging(value);
					this.SendPropertyChanging();
					this._MappedBy = value;
					this.SendPropertyChanged("MappedBy");
					this.OnMappedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleMaster")]
	public partial class VehicleMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int @__Id;
		
		private string _VehicleID;
		
		private string _VehicleRegNo;
		
		private string _Make;
		
		private System.Nullable<bool> _IsActive;
		
		private string _AccountId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_IdChanging(int value);
    partial void On_IdChanged();
    partial void OnVehicleIDChanging(string value);
    partial void OnVehicleIDChanged();
    partial void OnVehicleRegNoChanging(string value);
    partial void OnVehicleRegNoChanged();
    partial void OnMakeChanging(string value);
    partial void OnMakeChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnAccountIdChanging(string value);
    partial void OnAccountIdChanged();
    #endregion
		
		public VehicleMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_Id]", Storage="__Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int _Id
		{
			get
			{
				return this.@__Id;
			}
			set
			{
				if ((this.@__Id != value))
				{
					this.On_IdChanging(value);
					this.SendPropertyChanging();
					this.@__Id = value;
					this.SendPropertyChanged("_Id");
					this.On_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleID", DbType="NVarChar(50)")]
		public string VehicleID
		{
			get
			{
				return this._VehicleID;
			}
			set
			{
				if ((this._VehicleID != value))
				{
					this.OnVehicleIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleID = value;
					this.SendPropertyChanged("VehicleID");
					this.OnVehicleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleRegNo", DbType="NVarChar(50)")]
		public string VehicleRegNo
		{
			get
			{
				return this._VehicleRegNo;
			}
			set
			{
				if ((this._VehicleRegNo != value))
				{
					this.OnVehicleRegNoChanging(value);
					this.SendPropertyChanging();
					this._VehicleRegNo = value;
					this.SendPropertyChanged("VehicleRegNo");
					this.OnVehicleRegNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="NVarChar(50)")]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="NVarChar(50)")]
		public string AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vehicleRouteMapDet")]
	public partial class vehicleRouteMapDet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long @__id;
		
		private string _vehicleId;
		
		private string _RouteId;
		
		private System.DateTime _CreatedDateTime;
		
		private string _CreatedBy;
		
		private System.DateTime _UpdatedDateTime;
		
		private string _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnvehicleIdChanging(string value);
    partial void OnvehicleIdChanged();
    partial void OnRouteIdChanging(string value);
    partial void OnRouteIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public vehicleRouteMapDet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_id]", Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string vehicleId
		{
			get
			{
				return this._vehicleId;
			}
			set
			{
				if ((this._vehicleId != value))
				{
					this.OnvehicleIdChanging(value);
					this.SendPropertyChanging();
					this._vehicleId = value;
					this.SendPropertyChanged("vehicleId");
					this.OnvehicleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RouteId
		{
			get
			{
				return this._RouteId;
			}
			set
			{
				if ((this._RouteId != value))
				{
					this.OnRouteIdChanging(value);
					this.SendPropertyChanging();
					this._RouteId = value;
					this.SendPropertyChanged("RouteId");
					this.OnRouteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleDeviceMapDet")]
	public partial class VehicleDeviceMapDet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int @__iD;
		
		private string _vehicleId;
		
		private long _DeviceId;
		
		private System.Nullable<bool> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_iDChanging(int value);
    partial void On_iDChanged();
    partial void OnvehicleIdChanging(string value);
    partial void OnvehicleIdChanged();
    partial void OnDeviceIdChanging(long value);
    partial void OnDeviceIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public VehicleDeviceMapDet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_iD]", Storage="__iD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int _iD
		{
			get
			{
				return this.@__iD;
			}
			set
			{
				if ((this.@__iD != value))
				{
					this.On_iDChanging(value);
					this.SendPropertyChanging();
					this.@__iD = value;
					this.SendPropertyChanged("_iD");
					this.On_iDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string vehicleId
		{
			get
			{
				return this._vehicleId;
			}
			set
			{
				if ((this._vehicleId != value))
				{
					this.OnvehicleIdChanging(value);
					this.SendPropertyChanging();
					this._vehicleId = value;
					this.SendPropertyChanged("vehicleId");
					this.OnvehicleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="BigInt NOT NULL")]
		public long DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UservehicleMapDet")]
	public partial class UservehicleMapDet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int @__iD;
		
		private string _vehicleId;
		
		private string _UserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_iDChanging(int value);
    partial void On_iDChanged();
    partial void OnvehicleIdChanging(string value);
    partial void OnvehicleIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public UservehicleMapDet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_iD]", Storage="__iD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int _iD
		{
			get
			{
				return this.@__iD;
			}
			set
			{
				if ((this.@__iD != value))
				{
					this.On_iDChanging(value);
					this.SendPropertyChanging();
					this.@__iD = value;
					this.SendPropertyChanged("_iD");
					this.On_iDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string vehicleId
		{
			get
			{
				return this._vehicleId;
			}
			set
			{
				if ((this._vehicleId != value))
				{
					this.OnvehicleIdChanging(value);
					this.SendPropertyChanging();
					this._vehicleId = value;
					this.SendPropertyChanged("vehicleId");
					this.OnvehicleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
